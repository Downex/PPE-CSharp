<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        gg==
</value>
  </data>
</root>